name: Generate arxiv JSON file

run-name: Fetching arxiv data (new)

on:
  push:
    branches: ["main" ]
  schedule:
    # every 6 hours at minute 0 UTC
    - cron: '0 */6 * * *'
  # Allow manual triggering
  workflow_dispatch:

permissions:
  contents: write

jobs:

  fetch-arxiv:
    runs-on: ubuntu-latest

    steps:
      # 1) get all branches + history so that future commits will work
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2) prepare Node
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
        #   cache: 'npm'

      # 3) Ensure package-lock.json exists
      - name: Generate package-lock.json if missing
        run: |
          if [ ! -f package-lock.json ]; then
            npm install
          fi

      # 4) install your xml2js + node-fetch (or yarn)
      - name: Install dependencies
        run: npm ci

      - name: Debug installed dependencies
        run: |
          echo "Checking installed dependencies"
          npm list
          echo "Checking node-fetch version"
          npm list node-fetch

      # 5) run the fetch script & fail early if it errors
      - name: Run fetch-arxiv script
        run: |
          echo "running scripts/fetch-arxiv.js"
          node ./scripts/fetch-arxiv.js
        shell: bash

      # 6) debug: show the folder tree so we know “data/arxiv.json” is there
      - name: List repository contents
        run: ls -R .

      # 7) debug: print the first few lines of the JSON (or note if missing)
      - name: Show data/arxiv.json
        if: always()
        run: |
          if [ -f data/arxiv.json ]; then
            echo "--- data/arxiv.json exists, head of file: ---"
            head -n 20 data/arxiv.json
          else
            echo "⚠️ data/arxiv.json not found!"
            exit 1
          fi

      # 8) detect whether data/arxiv.json changed
      - name: Check for changes in data
        id: check-changes
        run: |
          git add data/arxiv.json
          # git diff --cached returns non-zero if there are staged changes
          if git diff --cached --quiet; then
            echo "changes=false" >> "$GITHUB_OUTPUT"
          else
            echo "changes=true"  >> "$GITHUB_OUTPUT"
          fi

      # 9) commit & push only when JSON changed
      - name: Commit and push if changes
        if: steps.check-changes.outputs.changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git commit -m "ci: update arXiv data" data/arxiv.json
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} HEAD:main